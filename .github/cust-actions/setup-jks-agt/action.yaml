name: 'Setup jks agent via Github Runner'
description: 'Install requeired dependency and jks agent.'
inputs:
  SSH_KEY_FOR_GITEE:  
    required: true
  ALIYUN_MAVEN_USERNAME:
    required: true
  ALIYUN_MAVEN_PASSWORD:
    required: true
  appConfig:
    required: true
  agtDownloadURL:
    required: true
  agtWorkdir:
    required: true
  agtURL:
    required: true
  agtKey:
    required: true
  keepalive:
    required: true
runs:
  using: "composite"
  steps: 
    - name: Setup Docker
      uses: docker/setup-buildx-action@v2.0.0

    - name: Prepare Dependency
      shell: bash
      run: |
        ls -al .
        echo "${{ inputs.SSH_KEY_FOR_GITEE }}" > id_rsa && chmod 600 id_rsa
        conf=`echo ${{ inputs.appConfig }} | base64 --decode`
        for repo in `echo $conf | jq -r '.[] | .repoName' | sort | uniq`
        do
          [ ! -d "$repo" ] && GIT_SSH_COMMAND='ssh -i id_rsa -o StrictHostKeyChecking=no' git clone git@gitee.com:primtal/$repo.git
          for app in `echo $conf | jq -c ".[] | select(.repoName | contains(\"$repo\"))"`
          do
            appType=`echo $app | jq -r '.appType'`
            appName=`echo $app | jq -r '.appName'`
            echo "start to install dependency for ${appName}"
            if [ $appType == "Backend" ]; then
              [ ! -d "$HOME/.m2" ] && mkdir $HOME/.m2
              sed -i "s/ALIYUN_MAVEN_USERNAME/${{ inputs.ALIYUN_MAVEN_USERNAME }}/g" settings.xml 
              sed -i "s/ALIYUN_MAVEN_PASSWORD/${{ inputs.ALIYUN_MAVEN_PASSWORD }}/g" settings.xml 
              cp settings.xml $HOME/.m2/settings.xml 
              ls -la $HOME/.m2/settings.xml && md5sum $HOME/.m2/settings.xml
              docker run -i -v "$PWD/$repo/$appName":/usr/src/mymaven -v "$HOME/.m2":/root/.m2 -w /usr/src/mymaven vnnvanhuong/maven-oracle-jdk:8 mvn install
            elif [ $appType == "Frontend" ]; then
              docker run -i -v "$PWD/$repo/$appName":/usr/src/mynode -v "$HOME/node_modules":/root/node_modules -w /usr/src/mynode --env NODE_PATH=/root/node_modules node:10.16.0 sh -c "npm set unsafe-perm true && npm install"
            else
              echo "unsupported appType!"
            fi
            ls -al $HOME/.m2
            ls -al $HOME/
            sudo pip install aliyunpan
          done
        done

    - name: Install jenkins agent
      shell: bash
      run: |
        sudo mkdir -p ${{ inputs.agtWorkdir }} && sudo chown $USER: ${{ inputs.agtWorkdir }}
        sudo mkdir -p /opt/service/gh-agt
        wget -P /opt/service/gh-agt ${{ inputs.agtDownloadURL }}
        sudo echo "java -jar agent.jar -jnlpUrl ${{ inputs.agtURL }} -secret \"${{ inputs.agtKey }}\" -workDir \"${{ inputs.agtWorkdir }}\"" > /opt/service/gh-agt/startup.sh
        sudo bash -c 'cat > /etc/systemd/system/gh-agt.service <<EOF
        [Unit]
        Description=Jenkins Agent service
        After=network.target

        [Service]
        WorkingDirectory=/opt/service/gh-agt
        ExecStart=/bin/bash startup.sh
        ExecStop=/bin/kill -9 $MAINPID
        User=runner
        Group=docker
        StandardOutput=syslog
        StandardError=syslog
        SyslogIdentifier=gh-agt
        PIDFile=/var/run/webapp/gh-agt.pid

        [Install]
        WantedBy=multi-user.target
        EOF'
        sudo systemctl daemon-reload
        sudo systemctl start gh-agt.service
        sleep 60
        sudo systemctl status gh-agt.service
        journalctl -u jenkins --lines 100
          
    - name: Don't kill instace
      shell: bash
      run: sleep ${{ inputs.keepalive }}
